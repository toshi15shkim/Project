<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tems.opr.main.dao.OprMainMapper">
	
	<!-- 돌발정보 전체 게시물수 -->
	<select id="getAccidentTotal" parameterType="hashmap" resultType="int">
		SELECT	COUNT(*) AS CNT
		FROM 	EVENT_OCCUR A 
				LEFT JOIN
					TAG_MASTER B 
        		ON 	A.TAG_NAME_FIRE = B.TAG_NAME
        		LEFT JOIN 
        			EQUIP C
        		ON 	B.TUNNEL_ID = C.TUNNEL_ID 
        		AND 	B.EQUIP_ID = C.EQUIP_ID
        		AND 	B.EQUIP_SEQ = C.EQUIP_SEQ 
        		LEFT JOIN 
        			EVENT_OCC_CATEG D
        		ON 	A.TAG_NAME = D.TAG_NAME
        WHERE 	TAG_VAL != 0 
        AND 		FALSE_DATE IS NULL
	</select>
	
	<!-- 돌발정보 보기 -->
	<select id="selectAccidentList" parameterType="hashmap" resultType="hashmap">
		SELECT 	*
		FROM		(
						SELECT 	TOP ${pageSize} *
						FROM		(
										SELECT 	TOP ${startRecord} CONVERT(VARCHAR(20), A.OCCUR_DATE, 120) AS OCCUR_DATE
										, 			A.TAG_NAME, A.TAG_VAL
										, 			A.TAG_NAME_FIRE, A.MEMO
										, 			CONVERT(VARCHAR(20), A.CONFIRM_DATE, 120) AS CONFIRM_DATE
										, 			CONVERT(VARCHAR(20), A.END_DATE, 120) AS END_DATE
										, 			C.EQUIP_POS
										, 			C.EQUIP_DIRECTION
										, 			D.EVENT_ID
										, 			D.TAG_DESC
        								FROM 	EVENT_OCCUR A 
        										LEFT JOIN 
        											TAG_MASTER B 
        										ON 	A.TAG_NAME_FIRE = B.TAG_NAME 
        										LEFT JOIN 
        											EQUIP C
										        ON 	B.TUNNEL_ID = C.TUNNEL_ID 
										        AND 	B.EQUIP_ID = C.EQUIP_ID 
										        AND 	B.EQUIP_SEQ = C.EQUIP_SEQ 
										        LEFT JOIN 
										        	EVENT_OCC_CATEG D
										        ON A.TAG_NAME = D.TAG_NAME 
										WHERE 	TAG_VAL != 0 
										AND 		FALSE_DATE IS NULL
        								ORDER BY OCCUR_DATE ASC
      								) AS DERIVEDTBL
						ORDER BY OCCUR_DATE DESC
					) AS DERIVEDTBL
		ORDER BY OCCUR_DATE DESC
    </select>
	
	<!-- 돌발정보 보기 (팝업) -->
	<select id="selectAccidentAllList" parameterType="hashmap" resultType="hashmap">
		SELECT 	*
		FROM		(
						SELECT 	ROW_NUMBER() OVER (ORDER BY A.OCCUR_DATE DESC) AS ROW_NUM
						,			CONVERT(VARCHAR(20), A.OCCUR_DATE, 120) AS OCCUR_DATE
						, 			A.TAG_NAME, A.TAG_VAL
						, 			A.TAG_NAME_FIRE, A.MEMO
						, 			CONVERT(VARCHAR(20), A.CONFIRM_DATE, 120) AS CONFIRM_DATE
						, 			CONVERT(VARCHAR(20), A.END_DATE, 120) AS END_DATE
						, 			C.EQUIP_POS
						, 			C.EQUIP_DIRECTION
						, 			D.EVENT_ID
						, 			D.TAG_DESC
    								FROM 	EVENT_OCCUR A 
    										LEFT JOIN 
    											TAG_MASTER B 
    										ON 	A.TAG_NAME_FIRE = B.TAG_NAME 
    										LEFT JOIN 
    											EQUIP C
						        ON 	B.TUNNEL_ID = C.TUNNEL_ID 
						        AND 	B.EQUIP_ID = C.EQUIP_ID 
						        AND 	B.EQUIP_SEQ = C.EQUIP_SEQ 
						        LEFT JOIN 
						        	EVENT_OCC_CATEG D
						        ON A.TAG_NAME = D.TAG_NAME 
						WHERE 	TAG_VAL != 0 
						AND 		FALSE_DATE IS NULL
					) AS DERIVEDTBL
		WHERE 	1 = 1
		<if test="endIndex != null and endIndex != ''">
			AND ROW_NUM <![CDATA[<]]> #{endIndex}
		</if>
		<if test="startIndex != null and startIndex != ''">
			AND ROW_NUM <![CDATA[>=]]> #{startIndex}
		</if>
    </select>
    
    <!-- 돌발정보 전체 게시물수 -->
	<select id="getAccidentAllTotal" parameterType="hashmap" resultType="Integer">
		SELECT	COUNT(*)
		FROM 	EVENT_OCCUR A 
				LEFT JOIN
					TAG_MASTER B 
        		ON 	A.TAG_NAME_FIRE = B.TAG_NAME
        		LEFT JOIN 
        			EQUIP C
        		ON 	B.TUNNEL_ID = C.TUNNEL_ID 
        		AND 	B.EQUIP_ID = C.EQUIP_ID
        		AND 	B.EQUIP_SEQ = C.EQUIP_SEQ 
        		LEFT JOIN 
        			EVENT_OCC_CATEG D
        		ON 	A.TAG_NAME = D.TAG_NAME
        WHERE 	TAG_VAL != 0 
        AND 		FALSE_DATE IS NULL
	</select>
	
	<!-- 기기 상태 (VICO, 풍속) -->
	<select id="selectDefaultViCoWindAnalVal" parameterType="hashmap" resultType="hashmap">
		(SELECT TUNNEL_ID,EQUIP_ID,CAST(CAST(COL001 AS NUMERIC(8,1)) AS VARCHAR) AS COL001,CAST(CAST(COL007 AS NUMERIC(8,1)) AS VARCHAR) AS COL002,CAST(CAST(COL013 AS NUMERIC(8,1)) AS VARCHAR) AS COL003
		,CAST(CAST(COL019 AS NUMERIC(8,1)) AS VARCHAR) AS COL004, CAST(CAST(COL002 AS NUMERIC(8,1)) AS VARCHAR) AS COL005,CAST(CAST(COL008 AS NUMERIC(8,1)) AS VARCHAR) AS COL006
		,CAST(CAST(COL014 AS NUMERIC(8,1)) AS VARCHAR) AS COL007,CAST(CAST(COL020 AS NUMERIC(8,1)) AS VARCHAR) AS COL008
		FROM (SELECT TOP 1 'T0001' AS TUNNEL_ID, '03' AS EQUIP_ID, (COL001),(COL007),(COL013),(COL019), (COL002),(COL008),(COL014),(COL020) FROM INST_DATA_A_T1  ORDER BY LOGTIME DESC) AS A) UNION
		(SELECT TUNNEL_ID,EQUIP_ID,CAST(CAST(COL025 AS NUMERIC(8,1)) AS VARCHAR) AS COL001,CAST(CAST(COL027 AS NUMERIC(8,1)) AS VARCHAR) AS COL002,CAST(CAST(COL029 AS NUMERIC(8,1)) AS VARCHAR) AS COL003,CAST(CAST(COL031 AS NUMERIC(8,1)) AS VARCHAR) AS COL004,'' AS COL005,'' AS COL006,'' AS COL007,'' AS COL008 FROM (SELECT TOP 1 'T0001' AS TUNNEL_ID, '04' AS EQUIP_ID, (COL025),(COL027),(COL029),(COL031),'' AS COL005,'' AS COL006,'' AS COL007,'' AS COL008 FROM INST_DATA_A_T1  ORDER BY LOGTIME DESC) AS B) UNION

		(SELECT TUNNEL_ID,EQUIP_ID,CAST(CAST(COL001 AS NUMERIC(8,1)) AS VARCHAR) AS COL001,CAST(CAST(COL007 AS NUMERIC(8,1)) AS VARCHAR) AS COL002,CAST(CAST(COL013 AS NUMERIC(8,1)) AS VARCHAR) AS COL003
		,CAST(CAST(COL019 AS NUMERIC(8,1)) AS VARCHAR) AS COL004, CAST(CAST(COL002 AS NUMERIC(8,1)) AS VARCHAR) AS COL005,CAST(CAST(COL008 AS NUMERIC(8,1)) AS VARCHAR) AS COL006
		,CAST(CAST(COL014 AS NUMERIC(8,1)) AS VARCHAR) AS COL007,CAST(CAST(COL020 AS NUMERIC(8,1)) AS VARCHAR) AS COL008
		FROM (SELECT TOP 1 'T0002' AS TUNNEL_ID, '03' AS EQUIP_ID, (COL001),(COL007),(COL013),(COL019), (COL002),(COL008),(COL014),(COL020) FROM INST_DATA_A_T2  ORDER BY LOGTIME DESC) AS A) UNION
		(SELECT TUNNEL_ID,EQUIP_ID,CAST(CAST(COL025 AS NUMERIC(8,1)) AS VARCHAR) AS COL001,CAST(CAST(COL027 AS NUMERIC(8,1)) AS VARCHAR) AS COL002,CAST(CAST(COL029 AS NUMERIC(8,1)) AS VARCHAR) AS COL003,CAST(CAST(COL031 AS NUMERIC(8,1)) AS VARCHAR) AS COL004,'' AS COL005,'' AS COL006,'' AS COL007,'' AS COL008 FROM (SELECT TOP 1 'T0002' AS TUNNEL_ID, '04' AS EQUIP_ID, (COL025),(COL027),(COL029),(COL031),'' AS COL005,'' AS COL006,'' AS COL007,'' AS COL008 FROM INST_DATA_A_T2  ORDER BY LOGTIME DESC) AS B)
	</select>
	
	<!-- 기기 상태 (풍향, 풍속) -->
	<select id="selectDefaultWindST" parameterType="hashmap" resultType="hashmap">
		(SELECT * FROM INST_DATA_CUR_D_T1 WHERE TAG_NAME LIKE '%_WIND%_ST') 
		UNION 
		(SELECT * FROM INST_DATA_CUR_D_T2 WHERE TAG_NAME LIKE '%_WIND%_ST')
	</select>
	
</mapper>